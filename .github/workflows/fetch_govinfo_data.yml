name: Fetch GovInfo.gov Data

on:
  schedule:
    - cron: "0 4 * * *" # Runs daily at 4 AM UTC
  workflow_dispatch: # Allows manual triggering

env:
  GOVINFO_API_KEY: ${{ secrets.GOVINFO_API_KEY }}

jobs:
  fetch_data:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to push commits

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip' # Cache pip dependencies

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Ensure requests and python-dotenv are installed for fetch_govinfo.py
        # (even if already in requirements.txt, this ensures they are present)
        pip install requests python-dotenv

    - name: Fetch GovInfo Collections List
      run: |
        python scripts/fetch_govinfo.py collections

    - name: Fetch sample FR Packages from GovInfo
      run: |
        python scripts/fetch_govinfo.py packages --collection FR --start-date 2023-12-01 --end-date 2023-12-05 --page-size 10

    - name: Fetch sample CREC Package Summary from GovInfo
      run: |
        python scripts/fetch_govinfo.py package-summary --package-id CREC-2023-12-01

    - name: Commit and Push Changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        # Stage any changes in the data/govinfo directory
        git add data/govinfo/**/*.json # Add all json files in data/govinfo and its subdirectories
        # Check if there are staged changes
        if ! git diff --cached --quiet; then
          git commit -m "Automated update of GovInfo.gov data"
          git push
        else
          echo "No changes to GovInfo.gov data files to commit."
        fi
